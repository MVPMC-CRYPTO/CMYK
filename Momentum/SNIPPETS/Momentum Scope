//@version=5
//                                                                              STUDY/STRATEGY SETTINGS
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
indicator(title='Fullscope Momentum', overlay=false, format=format.price, precision=0)
//                                                                              COLORSPACE
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
invisible           = #00000000
zeropoint           = #00000000
//                                                                              INPUTS
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//                                                              SCOPE
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
SCOPE_GRADATION     = input.string(defval='Exponential', options=['Linear', 'Exponential'], title='Scale Gradation')
SCOPE_RATIO         = input.float(defval=1.21, minval=1.010,maxval=1.245, step=0.005, title='Scale Expansion')
SCOPE_MAX           = input.float(defval=10000.0,maxval=10000.0, minval=128.0, step=100.0, title='Scale Maximum')
SCOPE_MIN           = SCOPE_GRADATION == 'Linear' ? SCOPE_MAX / 32 : SCOPE_MAX / math.pow(SCOPE_RATIO, 32)
SCOPE_BIAS          = input.float(defval=0.0, minval=-1.000, maxval=1.000, step=0.05, title='Scale Bias')
//                                                              THEME
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
MOM_STYLE           = input.string(defval='Duotone', options=['Duotone', 'Tritone'], title='Color Style')
color MOM_REDUCE    = input.color(#ef5653, "Reducing")
color MOM_INCREASE  = input.color(#26a69a, "Increasing")
color MOM_NEUTRAL   = input.color(#2962ff, "Neutral")
//                                                                              FUNCTIONS
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//                                                              AVERAGING
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//                      ROLLING MOVING AVERAGE
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
RMA(SERIES, LENGHT) =>
    ALPHA = 1 / LENGHT
    float SUM = na
    SUM := ALPHA * SERIES + (1.0 - ALPHA) * nz(SUM[1])
    SUM
//                                                              INDEXING
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//                      AUGMENTED RELATIVE MOMENTUM INDEX
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
ARMI(SOURCE, LENGHT, MOMENTUM) =>  // USES LINEAR VALUES , MAKE WITH LOG VALUES LIKE CHART SCALING
    INC = RMA(math.max(SOURCE - ta.sma(SOURCE, MOMENTUM * 2), 0), LENGHT)
    DEC = RMA(math.max(ta.sma(SOURCE, MOMENTUM * 2) - SOURCE, 0), LENGHT)
    RMI = DEC == 0.0 ? 0.0 : -(INC - DEC) / (INC + DEC)
    RMI
//                                                              TRANSFORMS
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//						TREND TRANSFORMATION
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
// visualization : https://www.desmos.com/calculator/tfzlnfaw5a
GAMMA(y, a) =>
    float x = na
    b = a == 0 ? 1 : a / math.abs(a)
    if b == 1
        x := (2 * math.pow((y + 1) / 2, -b * math.pow(a - b, -b)) - 1 + -(2 * math.pow((-y + 1) / 2, b * (b - a)) - 1)) / 2
    if b == -1
        x := (2 * math.pow((y + 1) / 2, -b * (a - b)) - 1 + -(2 * math.pow((-y + 1) / 2, b * math.pow(b - a, b)) - 1)) / 2
    x
//                                                              GRAPHICAL
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//                      SCALAR Y VALUE
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
SCALAR(ITERATION) =>
    SCOPE_GRADATION == 'Linear' ? (SCOPE_MAX - SCOPE_MAX / 32 * ITERATION) / SCOPE_RATIO : SCOPE_MAX / math.pow(SCOPE_RATIO, ITERATION)
//                      PIXELING
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
PIXEL(SOURCE, ITERATION) =>
    LENGHT  = SCALAR(ITERATION)
    PIXEL   = GAMMA(ARMI(SOURCE, LENGHT, int(LENGHT / 10)),SCOPE_BIAS)
//                      SHADING
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
SHADE_DUO(x) =>
    base = x > 0 ? MOM_REDUCE : MOM_INCREASE
    transp = (1 - math.abs(x)) * 100
    out = color.new(base,transp)
    
SHADE_TRIO(x) =>
    base = x < 0 ? color.from_gradient(x, -1, 0, MOM_INCREASE, MOM_NEUTRAL) : color.from_gradient(x, 0, 1, MOM_NEUTRAL, MOM_REDUCE)
    transp = 00//(1 - math.abs(x)) * 100
    out = color.new(base,transp)

SHADE(x) =>
    if MOM_STYLE == 'Duotone'
        out = SHADE_DUO(x)
    else
        out = SHADE_TRIO(x)
//                                                                              VISUALIZATION
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//                                                              FULLSCOPE
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//                      LINES
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
P32 = plot(SCALAR(1), color=invisible, editable=false)
P31 = plot(SCALAR(2), color=invisible, editable=false)
P30 = plot(SCALAR(3), color=invisible, editable=false)
P29 = plot(SCALAR(4), color=invisible, editable=false)
P28 = plot(SCALAR(5), color=invisible, editable=false)
P27 = plot(SCALAR(6), color=invisible, editable=false)
P26 = plot(SCALAR(7), color=invisible, editable=false)
P25 = plot(SCALAR(8), color=invisible, editable=false)
P24 = plot(SCALAR(9), color=invisible, editable=false)
P23 = plot(SCALAR(10), color=invisible, editable=false)
P22 = plot(SCALAR(11), color=invisible, editable=false)
P21 = plot(SCALAR(12), color=invisible, editable=false)
P20 = plot(SCALAR(13), color=invisible, editable=false)
P19 = plot(SCALAR(14), color=invisible, editable=false)
P18 = plot(SCALAR(15), color=invisible, editable=false)
P17 = plot(SCALAR(16), color=invisible, editable=false)
P16 = plot(SCALAR(17), color=invisible, editable=false)
P15 = plot(SCALAR(18), color=invisible, editable=false)
P14 = plot(SCALAR(19), color=invisible, editable=false)
P13 = plot(SCALAR(20), color=invisible, editable=false)
P12 = plot(SCALAR(21), color=invisible, editable=false)
P11 = plot(SCALAR(22), color=invisible, editable=false)
P10 = plot(SCALAR(23), color=invisible, editable=false)
P09 = plot(SCALAR(24), color=invisible, editable=false)
P08 = plot(SCALAR(25), color=invisible, editable=false)
P07 = plot(SCALAR(26), color=invisible, editable=false)
P06 = plot(SCALAR(27), color=invisible, editable=false)
P05 = plot(SCALAR(28), color=invisible, editable=false)
P04 = plot(SCALAR(29), color=invisible, editable=false)
P03 = plot(SCALAR(30), color=invisible, editable=false)
P02 = plot(SCALAR(31), color=invisible, editable=false)
P01 = plot(SCALAR(32), color=invisible, editable=false)

//                      FILLS
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
fill(P32, P31, color=SHADE(PIXEL(close, 1)))
fill(P31, P30, color=SHADE(PIXEL(close, 2)))
fill(P30, P29, color=SHADE(PIXEL(close, 3)))
fill(P29, P28, color=SHADE(PIXEL(close, 4)))
fill(P28, P27, color=SHADE(PIXEL(close, 5)))
fill(P27, P26, color=SHADE(PIXEL(close, 6)))
fill(P26, P25, color=SHADE(PIXEL(close, 7)))
fill(P25, P24, color=SHADE(PIXEL(close, 8)))
fill(P24, P23, color=SHADE(PIXEL(close, 9)))
fill(P23, P22, color=SHADE(PIXEL(close, 10)))
fill(P22, P21, color=SHADE(PIXEL(close, 11)))
fill(P21, P20, color=SHADE(PIXEL(close, 12)))
fill(P20, P19, color=SHADE(PIXEL(close, 13)))
fill(P19, P18, color=SHADE(PIXEL(close, 14)))
fill(P18, P17, color=SHADE(PIXEL(close, 15)))
fill(P17, P16, color=SHADE(PIXEL(close, 16)))
fill(P16, P15, color=SHADE(PIXEL(close, 17)))
fill(P15, P14, color=SHADE(PIXEL(close, 18)))
fill(P14, P13, color=SHADE(PIXEL(close, 19)))
fill(P13, P12, color=SHADE(PIXEL(close, 20)))
fill(P12, P11, color=SHADE(PIXEL(close, 21)))
fill(P11, P10, color=SHADE(PIXEL(close, 22)))
fill(P10, P09, color=SHADE(PIXEL(close, 23)))
fill(P09, P08, color=SHADE(PIXEL(close, 24)))
fill(P08, P07, color=SHADE(PIXEL(close, 25)))
fill(P07, P06, color=SHADE(PIXEL(close, 26)))
fill(P06, P05, color=SHADE(PIXEL(close, 27)))
fill(P05, P04, color=SHADE(PIXEL(close, 28)))
fill(P04, P03, color=SHADE(PIXEL(close, 29)))
fill(P03, P02, color=SHADE(PIXEL(close, 30)))
fill(P02, P01, color=SHADE(PIXEL(close, 31)))

